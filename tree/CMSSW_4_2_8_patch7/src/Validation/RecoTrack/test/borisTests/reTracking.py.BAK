import FWCore.ParameterSet.Config as cms

process = cms.Process("reTracking")

# message logger
process.MessageLogger = cms.Service("MessageLogger",
     default = cms.untracked.PSet( limit = cms.untracked.int32(-1) )
)

# source
readFiles = cms.untracked.vstring()
secFiles = cms.untracked.vstring() 
source = cms.Source ("PoolSource",fileNames = readFiles)
#source = cms.Source ("PoolSource",fileNames = readFiles, secondaryFileNames = secFiles)
#readFiles.extend( ['root://pcmssd12//data/mangano/SingleElMinusPt10.root'])
readFiles.extend( ['root://pcmssd12//data/mangano/SingleElFlatPt.root'])

process.source = source
process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(100) )

### conditions
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")
process.GlobalTag.globaltag = 'START42_V11::All'

### standard includes
process.load('Configuration/StandardSequences/Services_cff')
process.load('Configuration.StandardSequences.GeometryPilot2_cff')
process.load("Configuration.StandardSequences.RawToDigi_cff")
process.load("Configuration.EventContent.EventContent_cff")
process.load("Configuration.StandardSequences.Reconstruction_cff")
process.load("Configuration.StandardSequences.MagneticField_cff")

### validation-specific includes
process.load("SimTracker.TrackAssociation.TrackAssociatorByHits_cfi")
process.load("SimTracker.TrackAssociation.trackingParticleRecoTrackAsssociation_cfi")
process.load("Validation.RecoTrack.cuts_cff")
process.load("Validation.RecoTrack.MultiTrackValidator_cff")
process.load("DQMServices.Components.EDMtoMEConverter_cff")
process.load("Validation.Configuration.postValidation_cff")
process.load("Validation.RecoTrack.TrackValidation_cff")

process.TrackAssociatorByHits.SimToRecoDenominator = cms.string('reco')
#process.TrackAssociatorByHits.Purity_SimToReco = cms.double(0.60)
#process.TrackAssociatorByHits.Cut_RecoToSim = cms.double(0.60)

########### configuration MultiTrackValidator ########
process.multiTrackValidator.outputFile = 'multitrackvalidator.root'
process.multiTrackValidator.associators = ['TrackAssociatorByHits']
process.multiTrackValidator.skipHistoFit=cms.untracked.bool(False)
process.multiTrackValidator.runStandalone=cms.bool(True)
#process.cutsRecoTracks.quality = cms.vstring('','highPurity')
#process.cutsRecoTracks.quality = cms.vstring('')
#process.multiTrackValidator.label=cms.VInputTag(cms.InputTag("generalTracks"),
process.multiTrackValidator.label=cms.VInputTag(
#cms.InputTag("electronGsfTracks"),
                                   cms.InputTag("cutsRecoTracksHp"),
#                                   cms.InputTag("cutsRecoTracksZero"),
#                                   cms.InputTag("cutsRecoTracksZeroHp"),
#                                   cms.InputTag("cutsRecoTracksFirst"),
#                                   cms.InputTag("cutsRecoTracksFirstHp"),
#                                   cms.InputTag("cutsRecoTracksSecond"),
#                                   cms.InputTag("cutsRecoTracksSecondHp"),
#                                   cms.InputTag("cutsRecoTracksThird"),
#                                   cms.InputTag("cutsRecoTracksThirdHp"),
#                                   cms.InputTag("cutsRecoTracksFourth"),
#                                   cms.InputTag("cutsRecoTracksFourthHp"),
#                                   cms.InputTag("cutsRecoTracksFifth"),
#                                   cms.InputTag("cutsRecoTracksFifthHp")
                                   )
process.multiTrackValidator.useLogPt=cms.untracked.bool(True)
process.multiTrackValidator.minPt = cms.double(0.1)
process.multiTrackValidator.maxPt = cms.double(300.0)
process.multiTrackValidator.nintPt = cms.int32(40)


process.multiTrackValidator.useLogPt=cms.untracked.bool(True)
process.multiTrackValidator.histoProducerAlgoBlock.minPt = cms.double(0.1)
process.multiTrackValidator.histoProducerAlgoBlock.maxPt = cms.double(300.0)
process.multiTrackValidator.histoProducerAlgoBlock.nintPt = cms.int32(40)
#process.multiTrackValidator.minAbsEtaTP = cms.double(0.0)
#process.multiTrackValidator.maxAbsEtaTP = cms.double(0.9)
#process.multiTrackValidator.minAbsEtaTP = cms.double(0.9)
#process.multiTrackValidator.maxAbsEtaTP = cms.double(1.4)
#process.multiTrackValidator.minAbsEtaTP = cms.double(1.4)
#process.multiTrackValidator.maxAbsEtaTP = cms.double(2.5)
process.multiTrackValidator.minAbsEtaTP = cms.double(0.0)
process.multiTrackValidator.maxAbsEtaTP = cms.double(2.8)
#process.multiTrackValidator.minAbsEtaTP = cms.double(0.0)
#process.multiTrackValidator.maxAbsEtaTP = cms.double(2.5)

# per GSF
process.cutsRecoTracksHp = cms.EDFilter("RecoGsfTrackSelector",
    src = cms.InputTag("electronGsfTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring(),
    maxChi2 = cms.double(10000.0),
    quality = cms.vstring(),
    minRapidity = cms.double(-5.0),
    maxRapidity = cms.double(5.0),
    tip = cms.double(120.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3),
    minAbsEta = cms.double(1.4),
    maxAbsEta = cms.double(2.5)
)
process.multiTrackValidator.histoProducerAlgoBlock.useGsf = cms.bool(True)
#process.cutsRecoTracksHp.minAbsEta = cms.double(0.0)
#process.cutsRecoTracksHp.maxAbsEta = cms.double(0.9)
#process.cutsRecoTracksHp.minAbsEta = cms.double(0.9)
#process.cutsRecoTracksHp.maxAbsEta = cms.double(1.4)
process.cutsRecoTracksHp.minAbsEta = cms.double(1.4)
process.cutsRecoTracksHp.maxAbsEta = cms.double(2.5)
#process.cutsRecoTracksHp.minAbsEta = cms.double(0.0)
#process.cutsRecoTracksHp.maxAbsEta = cms.double(2.8)
#process.cutsRecoTracksHp.minAbsEta = cms.double(0.0)
#process.cutsRecoTracksHp.maxAbsEta = cms.double(2.5)



process.multiTrackValidator.UseAssociators = cms.bool(True)
process.ValidationSelectors = cms.Sequence( process.cutsRecoTracksHp
#                                process.cutsRecoTracksZero*
#                                process.cutsRecoTracksZeroHp*
#                                process.cutsRecoTracksFirst*
#                                process.cutsRecoTracksFirstHp*
#                                process.cutsRecoTracksSecond*
#                                process.cutsRecoTracksSecondHp*
#                                process.cutsRecoTracksThird*
#                                process.cutsRecoTracksThirdHp*
#                                process.cutsRecoTracksFourth*
#                                process.cutsRecoTracksFourthHp*
#                                process.cutsRecoTracksFifth*
#                                process.cutsRecoTracksFifthHp 
)

process.validation = cms.Sequence(
    process.multiTrackValidator
)



#### from Wolfgang: re-reco of gsfElectrons ####
process.electronCkfTrackCandidates.src = cms.InputTag("newCombinedSeeds")
process.myGsfReco = cms.Sequence(
    process.siPixelRecHits+process.siStripMatchedRecHits+
    process.firstStep+process.newCombinedSeeds+
    process.electronCkfTrackCandidates+process.electronGsfTracks)
###############


process.RECODEBUGoutput = cms.OutputModule("PoolOutputModule",
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = process.RECODEBUGEventContent.outputCommands,
    fileName = cms.untracked.string('step2.root'),
    dataset = cms.untracked.PSet(
        filterName = cms.untracked.string(''),
        dataTier = cms.untracked.string('GEN-SIM-RECODEBUG')
    )
)



# paths
process.p = cms.Path(
    process.myGsfReco 
    #process.ValidationSelectors *
    #process.validation
)

process.RECODEBUGoutput_step = cms.EndPath(process.RECODEBUGoutput)

process.schedule = cms.Schedule(
      process.p,process.RECODEBUGoutput_step
)


